{
  "spec": {
    "prefix": ["spec"],
    "body": [
      "it('$1', () => {",
      "\t$0",
    "});"]
  },

  "start7": {
    "prefix": "start7",
    "body": [
      "class Tc39Test {",
      "\t$0",
      "}",
      "",
      "let thing = new Tc39Test();",
    ]
  },

  "final7": {
    "prefix": ["final7"],
    "body": [
      "// Proposal TC39: Public/private class fields in Javascript",
      "",
      "class Tc39Test {",
      "  #myPrivate = 'ryan';          // Private field!",
      "  myPublic = 'announcement';   // Public field.",
      "",
      "  get myGetter() { return 'school'; }",
      "  get backdoor() { return this.#myPrivate; }",
      "}",
      "",
      "let thing = new Tc39Test();",
      "",
      "console.log('myGetter = ', thing.myGetter);         // 'school'",
      "console.log('myPublic = ', thing.myPublic);         // 'announcement'",
      "console.log('myPrivate = ', thing.myPrivate);       // undefined!!!",
      "console.log('backdoor = ', thing.backdoor);         // 'ryan'",
      "console.log('Object.keys => ', Object.keys(thing)); // ['myPublic'] only"
    ]
  },

  "final1": {
    "prefix": ["final1"],
    "body": [
      "const moment = require('moment');",
      "",
      "describe('my assumptions about momentjs', () => {",
      "",
      "  it('should create something', () => {",
      "    const unit = moment();",
      "    expect(unit).toBeTruthy();",
      "  });",
      "",
      "  it('should be able to create futures', () => {",
      "    const talk = moment();",
      "    const beer =  talk.add(1, 'hour');",
      "    expect(beer.hour()).toBe(talk.hour() + 1);",
      "    expect(beer.format()).not.toBe(talk.format());",
      "  });",
      "",
      "});"
    ]
  }
}